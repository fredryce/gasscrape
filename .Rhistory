#scale_fill_gradient(guide = guide_legend(reverse = T))
guid(guide_legend(reverse = T))
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
#theme(legend.position = "bottom", panel.background = element_blank()) +
#scale_fill_gradient(guide = guide_legend(reverse = T))
guide(guide_legend(reverse = T))
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
#theme(legend.position = "bottom", panel.background = element_blank()) +
#scale_fill_gradient(guide = guide_legend(reverse = T))
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") #+
#theme(legend.position = "bottom", panel.background = element_blank()) +
#scale_fill_gradient(guide = guide_legend(reverse = T))
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") #+
#theme(legend.position = "bottom", panel.background = element_blank()) +
#scale_fill_gradient(guide = guide_legend(reverse = T))
p
?scale_color_gradient
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
#theme(legend.position = "bottom", panel.background = element_blank()) +
#scale_fill_gradient(guide = guide_legend(reverse = T))
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
theme(legend.position = "bottom", panel.background = element_blank())
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")+
theme(legend.position = "bottom", panel.background = element_blank())
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=)
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
sfm_function(c(1,3,5))
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=)
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(x)/sum(exp(x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(100*x)/sum(exp(100*x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(0.5*x)/sum(exp(0.5*x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(0.1*x)/sum(exp(0.1*x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(0.001*x)/sum(exp(0.001*x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
sfm_function <- function(x){
exp(0.00001*x)/sum(exp(0.00001*x))
}
state_name_data_sm <- state_name_data %>%
mutate(sofmax_price=sfm_function(price))
state_name_data_sm
p <- ggplot(state_name_data_sm, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = sofmax_price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
clean_data_new %>%
filter(state=="FL", city=="Lakeland")
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5) +
labs(x="States", y="Price ($)")
#summarise(avg_gas_price=mean(price, na.rm = T))
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)")
#summarise(avg_gas_price=mean(price, na.rm = T))
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
coord_flip()
#summarise(avg_gas_price=mean(price, na.rm = T))
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
#summarise(avg_gas_price=mean(price, na.rm = T))
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)")
#summarise(avg_gas_price=mean(price, na.rm = T))
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state]))
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = mean(price)), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state])) %>%
group_by(full_state) %>%
summarise(price=mean(price))
state_name_data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
ggplot() +
geom_bar(aes(x=name, y=n)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
ggplot() +
geom_bar(aes(x=name, y=n)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
ggplot() +
geom_bar() +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
ggplot() +
geom_bar(aes(x=name)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
head(10)
ggplot() +
geom_bar(aes(x=name)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
head(10) %>%
ggplot() +
geom_bar(aes(x=name)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
head(10) %>%
ggplot() +
geom_bar(aes(x=name, y=n)) +
coord_flip()
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T) %>%
mutate(n_count = n) %>%
head(10) %>%
ggplot() +
geom_bar(aes(x=name, y=n_count)) +
coord_flip()
install.packages("plotly")
#most popular gas station for gasbuddy users
clean_data %>%
group_by(name) %>%
count(sort = T)
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)")
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(full_state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)")
state_name_data %>%
ggplot() + geom_boxplot(aes(x=as.factor(full_state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(full_state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
library(plotly)
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state])) %>%
group_by(full_state) %>%
summarise(price=mean(price))
state_name_data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
plotly(p)
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state])) %>%
group_by(full_state) %>%
summarise(price=mean(price))
state_name_data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
state_name_data <- clean_data_new %>%
mutate(full_state=tolower(setNames(state.name, state.abb)[state])) %>%
group_by(full_state) %>%
summarise(price=mean(price))
state_name_data
p <- ggplot(state_name_data, aes(map_id = full_state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = price), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
scale_fill_continuous(high = "#132B43", low = "#56B1F7")
p
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5)+#, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x= fct_reorder(as.factor(state), mean(price)), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x= fct_reorder(as.factor(state), mean(price)), y=mean(price)), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x= fct_reorder(as.factor(state), rowMeans(price)), y=mean(price)), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
fct_reorder(as.factor(state), price)
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=as.factor(state), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
fct_reorder(as.factor(state), rowMeans(price))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=fct_reorder(as.factor(state), price, mean), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=fct_reorder(as.factor(state), price, median), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
ggplot() + geom_boxplot(aes(x=fct_reorder(as.factor(state), price, mean), y=price), alpha=0.5, outlier.shape = NA) +
labs(x="States", y="Price ($)") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))
clean_data_new %>%
group_by(state, city) %>%
summarise(avg_gas_price=mean(price, na.rm = T)) %>%
filter(state=="FL", city=="Lakeland")
clean_data_new %>%
group_by(state, city) %>%
summarise(avg_gas_price=mean(price, na.rm = T))
library(dplyr)
library(tidyverse)
all_gas_data <- multmerge("D:/Python/gasbuddyscrap/30_03_2020")
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = (lapply(filenames, function(x){read.csv(file=x, colClasses=c("zip_code"="character"), na.strings=c(""))}))
res <- Reduce(function(x,y){bind_rows(x, y)}, datalist)
return(res)
}
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = (lapply(filenames, function(x){read.csv(file=x, colClasses=c("zip_code"="character"), na.strings=c(""))}))
res <- Reduce(function(x,y){bind_rows(x, y)}, datalist)
return(res)
}
all_gas_data <- multmerge("D:/Python/gasbuddyscrap/30_03_2020")
all_gas_data
